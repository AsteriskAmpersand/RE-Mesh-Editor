# -*- coding: utf-8 -*-
"""
Created on Fri Mar  7 16:59:10 2025

@author: Asterisk
"""
"""
import re

def decomposeRGBFormat(rgb):
    channels = []
    bitlen = 0
    for g in rgb.groups()[:-1]:
        if g:
            c,s = RGBChannel.match(str(g)).groups()            
            channels.append((c,int(s)))
            bitlen += int(s)
    return bitlen,channels

AstcRegex = re.compile("(ASTC)([0-9]+)X([0-9]+)(.*)")
BCRegex = re.compile("(BC[0-9]+H?)(.*)")
RGBRegex = re.compile("([RGBAX][0-9]+)?"*5+"(.*)")
RGBChannel = re.compile("([RGBAX])([0-9]+)")
def scanlineMinima(formatString):
    '''X Pixel Count, Y Pixel Count, Bitcount, Bytecount'''
    astc = AstcRegex.match(formatString)
    if astc:
        return 128//8
    bc = BCRegex.match(formatString)
    if bc:
        return 256
    rgb = RGBRegex.match(formatString)
    if rgb:
        bitlen,channels = decomposeRGBFormat(rgb)
        if bitlen > 32:
            return 256
        if len(channels) < 3:
            return 256
        else:
            return 32
"""

formatScanlineMinima = {'A8UNORM': 256,
 'ASTC10X10TYPELESS': 16,
 'ASTC10X10UNORM': 16,
 'ASTC10X10UNORMSRGB': 16,
 'ASTC10X5TYPELESS': 16,
 'ASTC10X5UNORM': 16,
 'ASTC10X5UNORMSRGB': 16,
 'ASTC10X6TYPELESS': 16,
 'ASTC10X6UNORM': 16,
 'ASTC10X6UNORMSRGB': 16,
 'ASTC10X8TYPELESS': 16,
 'ASTC10X8UNORM': 16,
 'ASTC10X8UNORMSRGB': 16,
 'ASTC12X10TYPELESS': 16,
 'ASTC12X10UNORM': 16,
 'ASTC12X10UNORMSRGB': 16,
 'ASTC12X12TYPELESS': 16,
 'ASTC12X12UNORM': 16,
 'ASTC12X12UNORMSRGB': 16,
 'ASTC4X4TYPELESS': 16,
 'ASTC4X4UNORM': 16,
 'ASTC4X4UNORMSRGB': 16,
 'ASTC5X4TYPELESS': 16,
 'ASTC5X4UNORM': 16,
 'ASTC5X4UNORMSRGB': 16,
 'ASTC5X5TYPELESS': 16,
 'ASTC5X5UNORM': 16,
 'ASTC5X5UNORMSRGB': 16,
 'ASTC6X5TYPELESS': 16,
 'ASTC6X5UNORM': 16,
 'ASTC6X5UNORMSRGB': 16,
 'ASTC6X6TYPELESS': 16,
 'ASTC6X6UNORM': 16,
 'ASTC6X6UNORMSRGB': 16,
 'ASTC8X5TYPELESS': 16,
 'ASTC8X5UNORM': 16,
 'ASTC8X5UNORMSRGB': 16,
 'ASTC8X6TYPELESS': 16,
 'ASTC8X6UNORM': 16,
 'ASTC8X6UNORMSRGB': 16,
 'ASTC8X8TYPELESS': 16,
 'ASTC8X8UNORM': 16,
 'ASTC8X8UNORMSRGB': 16,
 'B5G5R5A1UNORM': 32,
 'B5G6R5UNORM': 32,
 'B8G8R8A8TYPELESS': 32,
 'B8G8R8A8UNORM': 32,
 'B8G8R8A8UNORMSRGB': 32,
 'B8G8R8X8TYPELESS': 32,
 'B8G8R8X8UNORM': 32,
 'B8G8R8X8UNORMSRGB': 32,
 'BC1TYPELESS': 256,
 'BC1UNORM': 256,
 'BC1UNORMSRGB': 256,
 'BC2TYPELESS': 256,
 'BC2UNORM': 256,
 'BC2UNORMSRGB': 256,
 'BC3TYPELESS': 256,
 'BC3UNORM': 256,
 'BC3UNORMSRGB': 256,
 'BC4SNORM': 256,
 'BC4TYPELESS': 256,
 'BC4UNORM': 256,
 'BC5SNORM': 256,
 'BC5TYPELESS': 256,
 'BC5UNORM': 256,
 'BC6HSF16': 256,
 'BC6HTYPELESS': 256,
 'BC6HUF16': 256,
 'BC7TYPELESS': 256,
 'BC7UNORM': 256,
 'BC7UNORMSRGB': 256,
 'D16UNORM': 256,
 'D24UNORMS8UINT': 256,
 'D32FLOAT': 256,
 'D32FLOATS8X24UINT': 256,
 'FORCEUINT': 256,
 'G8R8G8B8UNORM': 32,
 'R10G10B10A2TYPELESS': 32,
 'R10G10B10A2UINT': 32,
 'R10G10B10A2UNORM': 32,
 'R10G10B10XRBIASA2UNORM': 32,
 'R11G11B10FLOAT': 32,
 'R16FLOAT': 256,
 'R16G16B16A16FLOAT': 256,
 'R16G16B16A16SINT': 256,
 'R16G16B16A16SNORM': 256,
 'R16G16B16A16TYPELESS': 256,
 'R16G16B16A16UINT': 256,
 'R16G16B16A16UNORM': 256,
 'R16G16FLOAT': 256,
 'R16G16SINT': 256,
 'R16G16SNORM': 256,
 'R16G16TYPELESS': 256,
 'R16G16UINT': 256,
 'R16G16UNORM': 256,
 'R16SINT': 256,
 'R16SNORM': 256,
 'R16TYPELESS': 256,
 'R16UINT': 256,
 'R16UNORM': 256,
 'R1UNORM': 256,
 'R24G8TYPELESS': 256,
 'R24UNORMX8TYPELESS': 256,
 'R32FLOAT': 256,
 'R32FLOATX8X24TYPELESS': 256,
 'R32G32B32A32FLOAT': 256,
 'R32G32B32A32SINT': 256,
 'R32G32B32A32TYPELESS': 256,
 'R32G32B32A32UINT': 256,
 'R32G32B32FLOAT': 256,
 'R32G32B32SINT': 256,
 'R32G32B32TYPELESS': 256,
 'R32G32B32UINT': 256,
 'R32G32FLOAT': 256,
 'R32G32SINT': 256,
 'R32G32TYPELESS': 256,
 'R32G32UINT': 256,
 'R32G8X24TYPELESS': 256,
 'R32SINT': 256,
 'R32TYPELESS': 256,
 'R32UINT': 256,
 'R8G8B8A8SINT': 32,
 'R8G8B8A8SNORM': 32,
 'R8G8B8A8TYPELESS': 32,
 'R8G8B8A8UINT': 32,
 'R8G8B8A8UNORM': 32,
 'R8G8B8A8UNORMSRGB': 32,
 'R8G8B8G8UNORM': 32,
 'R8G8SINT': 256,
 'R8G8SNORM': 256,
 'R8G8TYPELESS': 256,
 'R8G8UINT': 256,
 'R8G8UNORM': 256,
 'R8SINT': 256,
 'R8SNORM': 256,
 'R8TYPELESS': 256,
 'R8UINT': 256,
 'R8UNORM': 256,
 'R9G9B9E5SHAREDEXP': 32,
 'VIAEXTENSION': 256,
 'X24TYPELESSG8UINT': 256,
 'X32TYPELESSG8X24UINT': 256}